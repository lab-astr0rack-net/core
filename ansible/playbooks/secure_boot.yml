- hosts: all
  name: Perform Secure Boot Setup
  tags: [ always ]
  become: true
  tasks:

    - name: Make sure secure boot signed dir exists
      file:
        path: /var/lib/shim-signed 
        state: directory
        mode: '0755'

    - name: Make sure secure boot mok dir exists
      file:
        path: /var/lib/shim-signed/mok
        state: directory
        mode: '0755'
      notify: 
        - Generate Keys

    - name: Make sure hook exists for apt
      ansible.builtin.blockinfile:
        path: /etc/kernel/postinst.d/zz-signing
        mode: 755
        block: |
          #!/bin/sh
          # Author: @maxried https://gist.github.com/maxried/796d1f3101b3a03ca153fa09d3af8a11

          set -e

          KERNEL_IMAGE="$2"
          MOK_CERT_NAME="MOK"
          MOK_DIRECTORY="/var/lib/shim-signed/mok"

          if [ "$#" -ne "2" ] ; then
              echo "Wrong count of command line arguments. This is not meant to be called directly." >&2
              exit 1
          fi

          if [ ! -x "$(command -v sbsign)" ] ; then
              echo "sbsign not executable. Bailing." >&2
              exit 1
          fi


          if [ ! -r "$MOK_DIRECTORY/$MOK_CERT_NAME.der" ] ; then
              echo "$MOK_DIRECTORY/$MOK_CERT_NAME.der is not readable." >&2
              exit 1
          fi

          if [ ! -r "$MOK_DIRECTORY/$MOK_CERT_NAME.priv" ] ; then
              echo "$MOK_DIRECTORY/$MOK_CERT_NAME.priv is not readable." >&2
              exit 1
          fi

          if [ ! -w "$KERNEL_IMAGE" ] ; then
              echo "Kernel image $KERNEL_IMAGE is not writable." >&2
              exit 1
          fi

          if [ ! -r "$MOK_DIRECTORY/$MOK_CERT_NAME.pem" ] ; then
              echo "$MOK_CERT_NAME.pem missing. Generating from $MOK_CERT_NAME.der."
              exit 1
          fi

          echo "Signing $KERNEL_IMAGE..."
          sbsign --key "$MOK_DIRECTORY/$MOK_CERT_NAME.priv" --cert "$MOK_DIRECTORY/$MOK_CERT_NAME.pem" --output "$KERNEL_IMAGE" "$KERNEL_IMAGE"

  handlers:

    - name: Generate secure boot signing keys
      listen: Generate Keys
      shell: |
        openssl req -new -x509 -nodes -newkey rsa:2048 -keyout /var/lib/shim-signed/mok/MOK.priv -outform DER -out /var/lib/shim-signed/mok/MOK.der -days 36500 -subj "/CN=lab.astr0rack.net"
        openssl x509 -inform der -in /var/lib/shim-signed/mok/MOK.der -out /var/lib/shim-signed/mok/MOK.pem
        mokutil --import /var/lib/shim-signed/mok/MOK.der

    - name: Sign current kernel with signing keys (if this fails there will be pain)
      listen: Generate Keys
      shell: |
        VERSION="$(uname -r)"
        SHORT_VERSION="$(uname -r | cut -d . -f 1-2)"
        MODULES_DIR=/lib/modules/$VERSION
        KBUILD_DIR=/usr/lib/linux-kbuild-$SHORT_VERSION
        sbsign --key MOK.priv --cert MOK.pem "/boot/vmlinuz-$VERSION" --output "/boot/vmlinuz-$VERSION.tmp"
        mv "/boot/vmlinuz-$VERSION.tmp" "/boot/vmlinuz-$VERSION"

